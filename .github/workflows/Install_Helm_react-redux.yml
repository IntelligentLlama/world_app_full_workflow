# This is a basic workflow to help you get started with Actions

name: install_app_dev

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  #push:
  #  branches: [ main ]
  #pull_request:
  #  branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      installapp:
        description: 'Enter yes or no (lowercase) if install should happen'
        required: true
        default: 'No'
#==============================
# Variable section
#==============================
env:
  PROJECT_ID: ${{ secrets.G_PROJ }}
  SERVICE_ACCOUNT: ${{ secrets.G_INFO }}
  GITHUB_SHA: ${{ github.sha }}
  GKE_CLUSTER: gke-ycit-tformers-default-dev
  GKE_REGION: us-central1
  APP_REPO_OWNER: Vidinci
  APP_REPO_NAME: realworld-test-cm
  IMAGE: react-redux
  DEPLOYMENT_NAME: react-redux    


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: dev
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: 'Main Code checkout'
        uses: actions/checkout@v2
     
     # Requires you create a GitHub personal Token 
     # https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token
     #
      - name: Get RealWorld app from its repo
        uses: GuillaumeFalourd/clone-github-repo-action@v1
        with:
          owner: 'Vidinci' 
          repository: 'realworld-test-cm'
          access-token: ${{ secrets.PAT }}  
       
      # Runs a single command using the runners shell
      - name: Run ls command
        run: ls ./*
        
      - name: Access cloned repository content
        run: |
         cd $APP_REPO_NAME
         ls -l
         
      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.G_INFO }}
          project_id: ${{ secrets.G_PROJ }}

    # Configure docker to use the gcloud command-line tool as a credential helper
      - run: |
          gcloud auth configure-docker
    
     # Build the Docker image, for the real world app react-redux
      - name: Build
        run: |-
          docker build \
           --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
           --build-arg GITHUB_SHA="$GITHUB_SHA" \
           --build-arg GITHUB_REF="$GITHUB_REF" \
           .
     # Push the Docker image to Google Container Registry, for the real world app react-redux
      - name: Publish
        run: |-
          docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"
         

#--set image.tag=${{ github.sha }}

      - name: Install Helm chart react_redux
        if: ${{ github.event.inputs.installapp  =='yes' }}
        uses: hahow/install-helm-chart-action@v1.0.3
        with:
          gcloud_auth_key: ${{ secrets.G_INFO }}
          gcloud_project_id: ${{ secrets.G_PROJ }}
          cluster_name: 'gke-tformers-tformers-default-dev' #${{ secrets.CLUSTER_NAME }}
          cluster_region: us-central1
          release_namespace: default
          release_name: react-redux
          chart_name: ./charts/realworldchart
          helm_upgrade_args: |
               --set=image.tag=v5

