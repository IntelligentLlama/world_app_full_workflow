# This is a basic workflow to help you get started with Actions

name: TF_Deploy_dev
on:
  push:
    branches: [ main,'dev','prod']
    paths: 
      - '**.tf'
      - '**.tfvars'
 
  pull_request:
    types: [ 'labeled','opened','synchronize','reopened']
    branches: [ 'main','dev','prod' ]
    paths: 
      - '**.tf'
      - '**.tfvars'


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      runapply:
        description: 'Enter yes or no if apply should be run'
        required: true
        default: 'No'
    
    #${{ github.event.inputs.runapply =='' }}
        
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  log-github-event-goodies:
    name: "LOG Everything on GitHub Event"
    runs-on: ubuntu-latest
    steps:
      - name: Logging
        run: |
          echo "${{toJSON(github.event)}}"
          
  build:
    name: 'TF_prepare'
    runs-on: ubuntu-latest
    environment: dev

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
        #====================================#
        # Checkout the repository to the GitHub Actions runner
        #====================================#
      - name: Checkout
        uses: actions/checkout@v2
      
        #====================================#
        # Build required info in TF files
        #====================================#
      - name: Setup gcp info
        env:
          G_PROJ: ${{ secrets.G_PROJ }}
          G_B_ACT: ${{ secrets.G_B_ACT }}
        run: |
          cat << EOF >> ./run-modules/create-gke/terraform.tfvars
          
          gcp_project_id  = "$G_PROJ"
          billing_account = "$G_B_ACT"
          EOF
          
      - run: cat ./run-modules/create-gke/terraform.tfvars
    
        #====================================#
        # Build required info for TF Container
        #====================================#
      - name: Setup TF token
        env:
          TFE_TOKEN: ${{ secrets.TFE_INFO }}
        run: |
          cat << EOF > ./run-modules/create-gke/.terraformrc
          {
             "credentials": {
               "app.terraform.io": {
                 "token": "$TFE_TOKEN"
                }
              }
          }
          EOF
          
      - run: cat ./run-modules/create-gke/.terraformrc

        #====================================#
        # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
        #====================================#
      - name: Terraform init
        uses: docker://ghcr.io/ycit-team-terraformers/terraformers:v1
        env:
           TF_CLI_CONFIG_FILE: ./run-modules/create-gke/.terraformrc
           GOOGLE_CREDENTIALS: ${{ secrets.G_INFO }}       
        with:
          entrypoint: terraform
          args: -chdir=./run-modules/create-gke/ init
          
        #====================================#
        # Terraform validate: Runs terraform validate
        #====================================#
      - name: Terraform validate
        uses: docker://ghcr.io/ycit-team-terraformers/terraformers:v1
        env:
           TF_CLI_CONFIG_FILE: ./run-modules/create-gke/.terraformrc
           GOOGLE_CREDENTIALS: ${{ secrets.G_INFO }}
        with:
          entrypoint: terraform
          args: -chdir=./run-modules/create-gke/ validate
        
       #====================================#
       # Terraform format
       #====================================#
      - name: Terraform format
        uses: docker://ghcr.io/ycit-team-terraformers/terraformers:v1
        with:
          entrypoint: terraform
          args: -chdir=./run-modules/create-gke/ fmt

       #====================================#
       # Linting of TF code
       # Runs a container from ghcr.io, version v0.33.1
       #====================================#
      - name: Linting of Terraform files
        uses: terraform-linters/tflint-bundle@v0.33.1
        # here are some options: loglevel to provide visibility, disable 1 TFLint default rule that was giving us Warning, and manually specify the location in the repo for TF files
        with:
          args: --ignore-module=SOURCE --loglevel=info --disable-rule=terraform_deprecated_interpolation ./run-modules/create-gke/

        #====================================#
        # Terraform plan : Generates an execution plan for Terraform
        #====================================#
      - name: Terraform plan
        id: plan
        uses: docker://ghcr.io/ycit-team-terraformers/terraformers:v1
        env:
           TF_CLI_CONFIG_FILE: ./run-modules/create-gke/.terraformrc
           GOOGLE_CREDENTIALS: ${{ secrets.G_INFO }}
        with:
          entrypoint: terraform
          args: -chdir=./run-modules/create-gke/ plan
          
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
